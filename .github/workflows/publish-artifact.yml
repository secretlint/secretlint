# Post publish after npm
name: Publish-Artifact
on:
  repository_dispatch:
    types: [publish-artifact]
env:
  CI: true
  DOCKER_BASE_NAME: ghcr.io/${{ github.repository }}
  DOCKER_HUB_BASE_NAME: secretlint/secretlint

permissions:
  contents: write
  packages: write
jobs:
#  npm binary
#  publish-binary:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [macOS-latest, windows-latest, ubuntu-latest]
#        node-version: [12.9.1] # pre-build nexe https://github.com/nexe/nexe/releases/tag/v3.0.0
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 1
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#      - name: Install
#        run: npm install # avoid hoisting https://github.com/nexe/nexe/issues/649
#        working-directory: ./publish/binary-compiler
#      - name: Build binary
#        run: npm run dist
#        working-directory: ./publish/binary-compiler
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v1
#        with:
#          name: ${{ matrix.os }}
#          path: ./publish/binary-compiler/dist
#      - name: Release
#        uses: softprops/action-gh-release@v1
#        with:
#          tag_name: v${{ github.event.client_payload.version }}
#          files: "./publish/binary-compiler/dist/**"
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Docker
  publish-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Set TAG_NAME=tags"
        run: |
          echo "TAG_NAME=v${{ github.event.client_payload.version }}" >> $GITHUB_ENV
          echo "SECRETLINT_VERSION=${{ github.event.client_payload.version }}" >> $GITHUB_ENV
      - name: Set HUB_TAG
        run: |
          echo "PKG_TAG=${DOCKER_BASE_NAME}:${TAG_NAME}" >> $GITHUB_ENV
          echo "PKG_LATEST_TAG=${DOCKER_BASE_NAME}:latest" >> $GITHUB_ENV
          echo "HUB_TAG=${DOCKER_HUB_BASE_NAME}:${TAG_NAME}" >> $GITHUB_ENV
          echo "HUB_LATEST_TAG=${DOCKER_HUB_BASE_NAME}:latest" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Registries
        run: |
          echo "${GITHUB_TOKEN}" | docker login ghcr.io -u azu --password-stdin
          echo "${DOCKER_HUB_TOKEN}" | docker login -u efcl --password-stdin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build image
        run: |
          docker buildx build . \
            --build-arg SECRETLINT_VERSION=${SECRETLINT_VERSION} \
            --load \
            -t "${PKG_TAG}"
        working-directory: ./publish/docker
      - name: Print version
        run: |
          docker run --rm ${PKG_TAG} --version
        working-directory: ./publish/docker
      - name: Build and push images
        run: |
          docker buildx build . \
            --build-arg SECRETLINT_VERSION=${SECRETLINT_VERSION} \
            --platform linux/amd64,linux/arm64 \
            --push \
            -t "${PKG_TAG}" \
            -t "${PKG_LATEST_TAG}" \
            -t "${HUB_TAG}" \
            -t "${HUB_LATEST_TAG}"
        working-directory: ./publish/docker
