# Post publish after npm
name: Publish-Artifact
on:
  repository_dispatch:
    types: [publish-artifact]
env:
  DOCKER_BASE_NAME: ghcr.io/${{ github.repository }}
  DOCKER_HUB_BASE_NAME: secretlint/secretlint

permissions:
  contents: write
  packages: write
jobs:
  # TODO: deno depend on npm registry
  # so, we need to wait for npm publish
  # Single Executable binary
  publish-binary:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Test binary
        run: deno task dev
        working-directory: ./publish/binary-compiler
      - name: Build binary
        run: bash build.sh
        working-directory: ./publish/binary-compiler
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.client_payload.version }}
          files: "./publish/binary-compiler/dist/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Docker
  publish-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Set TAG_NAME=tags"
        run: |
          echo "TAG_NAME=v${{ github.event.client_payload.version }}" >> $GITHUB_ENV
          echo "SECRETLINT_VERSION=${{ github.event.client_payload.version }}" >> $GITHUB_ENV
      - name: Set HUB_TAG
        run: |
          echo "PKG_TAG=${DOCKER_BASE_NAME}:${TAG_NAME}" >> $GITHUB_ENV
          echo "PKG_LATEST_TAG=${DOCKER_BASE_NAME}:latest" >> $GITHUB_ENV
          echo "HUB_TAG=${DOCKER_HUB_BASE_NAME}:${TAG_NAME}" >> $GITHUB_ENV
          echo "HUB_LATEST_TAG=${DOCKER_HUB_BASE_NAME}:latest" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Registries
        run: |
          echo "${GITHUB_TOKEN}" | docker login ghcr.io -u azu --password-stdin
          echo "${DOCKER_HUB_TOKEN}" | docker login -u efcl --password-stdin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build image
        run: |
          docker buildx build . \
            --build-arg SECRETLINT_VERSION=${SECRETLINT_VERSION} \
            --load \
            -t "${PKG_TAG}"
        working-directory: ./publish/docker
      - name: Print version
        run: |
          docker run --rm ${PKG_TAG} --version
        working-directory: ./publish/docker
      - name: Build and push images
        run: |
          docker buildx build . \
            --build-arg SECRETLINT_VERSION=${SECRETLINT_VERSION} \
            --platform linux/amd64,linux/arm64 \
            --push \
            -t "${PKG_TAG}" \
            -t "${PKG_LATEST_TAG}" \
            -t "${HUB_TAG}" \
            -t "${HUB_LATEST_TAG}"
        working-directory: ./publish/docker
